(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{843:function(t,i,s){"use strict";s.r(i);var n=s(58),e=Object(n.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"git常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" git常用命令")]),t._v(" "),s("ol",[s("li",[t._v("设置本地的 ssh key，打开 git bash,输入命令：")])]),t._v(" "),s("p",[t._v('ssh-keygen -t rsa -C "XXXXXX@XXXX.com" 其中双引号中是你注册 github 时用的邮箱。')]),t._v(" "),s("p",[t._v("一直回车，选择默认路径，和空密码。最后会在默认路径下生成.ssh 文件夹，打开.ssh 里面有两个文件，打开 id_rsa.pub 复制里面的密钥。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("打开 github,选择 settings")])]),t._v(" "),s("p",[t._v("得到如下页面，点击 ssh and gpg keys,选择 ssh keys 右边的 new ssh key。出现下面绿色框的内容，填写标题，并将自己刚才复制的密钥粘贴到 key 中。最后点击 add ssh key.")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("查看是否成功。在 git bash 中输入命令：\nssh -T git@github.com\n会提示，是否 continue，输入 yes。后就会看到：\nWarning:Permanently added 'github.com,207.97.227.239' (RSA) to the list of known hosts.\n　　 Hi zhangsiyao11! You've successfully authenticated, but GitHub does not provide shell access.\n这样就成功了，不用理会 warning。")])]),t._v(" "),s("li",[s("p",[t._v("克隆你刚才新建的仓库到本地，输入命令：\ngit clone https://github.com/zhangsiyao11/chat\n后面的 http 是你的仓库的地址。")])])]),t._v(" "),s("p",[t._v("此时会在刚才创建 ssh key 的默认目录下生成以你仓库名为文件名的文件，打开得到下图所示：")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[s("p",[t._v("最后将你想要上传的项目文件复制到上面的目录：")])]),t._v(" "),s("li",[s("p",[t._v('在此处打开 git bash,输入如下命令：\ngit init\ngit add "文件名"'),s("br"),t._v('\ngit commit -m "文件名"\n如果出现让你设置用户名和用户邮箱的提示，就按照提示上给的命令输入即可。后再次执行上面 commit 的命令。')])])]),t._v(" "),s("p",[t._v("git remote add origin https://github.com/zhangsiyao11/chat http 为你自己仓库的地址\n如果出现错误：\nfatal: remote origin already exists\n则执行以下语句：\ngit remote rm origin\n再执行 git remote add origin https://github.com/zhangsiyao11/chat即可。")]),t._v(" "),s("p",[t._v("git pull origin master"),s("br"),t._v("\ngit push origin master")]),t._v(" "),s("ul",[s("li",[t._v("强制提交，覆盖服务器\ngit push origin master -f")])]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[t._v("git强制覆盖："),s("br"),t._v("\n    git fetch --all"),s("br"),t._v("\n    git reset --hard origin/master"),s("br"),t._v("\n    git pull")])]),t._v(" "),s("p",[t._v("git强制覆盖本地命令（单条执行）："),s("br"),t._v("\n    git fetch --all && git reset --hard origin/master && git pull\n \n第一个是：拉取所有更新，不同步；\n第二个是：本地代码同步线上最新版本(会覆盖本地所有与远程仓库上同名的文件)；\n第三个是：再更新一次（其实也可以不用，第二步命令做过了其实）")])])}),[],!1,null,null,null);i.default=e.exports}}]);